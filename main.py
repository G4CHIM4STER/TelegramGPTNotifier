import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)

bot = Bot(token='6596637011:AAGimhzJEToQKuffxdsfV8n9ZCrajEHFkNg')

dp = Dispatcher()
#asdasd
# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message : types.Message):
    await message.answer("Hello")
    
@dp.message(Command("test1"))
async def cmd_test1(message: types.Message):
    await message.reply("Test 1")
    
# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /test2
async def cmd_test2(message: types.Message):
    await message.reply("Test 2")

@dp.message(Command("answer"))
async def cmd_answer(message: types.Message):
    await message.answer("–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")


@dp.message(Command("reply"))
async def cmd_reply(message: types.Message):
    await message.reply('–≠—Ç–æ –æ—Ç–≤–µ—Ç —Å "–æ—Ç–≤–µ—Ç–æ–º"')
    
@dp.message(Command("dice"))
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")    

#! –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç !

# mylist = [1,2,3]

# @dp.message(Command("add_to_list"))
# async def cmd_add_to_list(message: types.Message, mylist: list[int]):
#     mylist.append(7)
#     await message.answer("–î–æ–±–∞–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ 7")
    
# @dp.message(Command("show_list"))
# async def cmd_show_list(message: types.Message, mylist: list[int]):
#     await message.answer(f"–í–∞—à —Å–ø–∏—Å–æ–∫: {mylist}")

async def main():
    await dp.start_polling(bot)
    
# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /test1
    
if __name__ == "__main__":
    # –ì–¥–µ-—Ç–æ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ñ—É–Ω–∫—Ü–∏–∏ main():
    dp.message.register(cmd_test2, Command("test2"))
    asyncio.run(main())